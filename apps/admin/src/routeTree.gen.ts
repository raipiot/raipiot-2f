/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WhitelistRouteImport } from './routes/_whitelist/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as RouteImport } from './routes/*/route'
import { Route as WhitelistSignupRouteImport } from './routes/_whitelist/signup/route'
import { Route as WhitelistLoginRouteImport } from './routes/_whitelist/login/route'

// Create Virtual Routes

const AuthIndexLazyImport = createFileRoute('/_auth/')()
const Auth500LazyImport = createFileRoute('/_auth/500')()
const Auth404LazyImport = createFileRoute('/_auth/404')()
const Auth403LazyImport = createFileRoute('/_auth/403')()
const WhitelistSsoRouteLazyImport = createFileRoute('/_whitelist/sso')()
const WhitelistForgotPasswordRouteLazyImport = createFileRoute(
  '/_whitelist/forgot-password',
)()
const AuthDashboardRouteLazyImport = createFileRoute('/_auth/dashboard')()

// Create/Update Routes

const WhitelistRouteRoute = WhitelistRouteImport.update({
  id: '/_whitelist',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_whitelist/route.lazy').then((d) => d.Route),
)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_auth/route.lazy').then((d) => d.Route))

const RouteRoute = RouteImport.update({
  path: '/*',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexLazyRoute = AuthIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() => import('./routes/_auth/index.lazy').then((d) => d.Route))

const Auth500LazyRoute = Auth500LazyImport.update({
  path: '/500',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() => import('./routes/_auth/500.lazy').then((d) => d.Route))

const Auth404LazyRoute = Auth404LazyImport.update({
  path: '/404',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() => import('./routes/_auth/404.lazy').then((d) => d.Route))

const Auth403LazyRoute = Auth403LazyImport.update({
  path: '/403',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() => import('./routes/_auth/403.lazy').then((d) => d.Route))

const WhitelistSsoRouteLazyRoute = WhitelistSsoRouteLazyImport.update({
  path: '/sso',
  getParentRoute: () => WhitelistRouteRoute,
} as any).lazy(() =>
  import('./routes/_whitelist/sso/route.lazy').then((d) => d.Route),
)

const WhitelistForgotPasswordRouteLazyRoute =
  WhitelistForgotPasswordRouteLazyImport.update({
    path: '/forgot-password',
    getParentRoute: () => WhitelistRouteRoute,
  } as any).lazy(() =>
    import('./routes/_whitelist/forgot-password/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthDashboardRouteLazyRoute = AuthDashboardRouteLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/dashboard/route.lazy').then((d) => d.Route),
)

const WhitelistSignupRouteRoute = WhitelistSignupRouteImport.update({
  path: '/signup',
  getParentRoute: () => WhitelistRouteRoute,
} as any).lazy(() =>
  import('./routes/_whitelist/signup/route.lazy').then((d) => d.Route),
)

const WhitelistLoginRouteRoute = WhitelistLoginRouteImport.update({
  path: '/login',
  getParentRoute: () => WhitelistRouteRoute,
} as any).lazy(() =>
  import('./routes/_whitelist/login/route.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/*': {
      preLoaderRoute: typeof RouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_whitelist': {
      preLoaderRoute: typeof WhitelistRouteImport
      parentRoute: typeof rootRoute
    }
    '/_whitelist/login': {
      preLoaderRoute: typeof WhitelistLoginRouteImport
      parentRoute: typeof WhitelistRouteImport
    }
    '/_whitelist/signup': {
      preLoaderRoute: typeof WhitelistSignupRouteImport
      parentRoute: typeof WhitelistRouteImport
    }
    '/_auth/dashboard': {
      preLoaderRoute: typeof AuthDashboardRouteLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_whitelist/forgot-password': {
      preLoaderRoute: typeof WhitelistForgotPasswordRouteLazyImport
      parentRoute: typeof WhitelistRouteImport
    }
    '/_whitelist/sso': {
      preLoaderRoute: typeof WhitelistSsoRouteLazyImport
      parentRoute: typeof WhitelistRouteImport
    }
    '/_auth/403': {
      preLoaderRoute: typeof Auth403LazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/404': {
      preLoaderRoute: typeof Auth404LazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/500': {
      preLoaderRoute: typeof Auth500LazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/': {
      preLoaderRoute: typeof AuthIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  RouteRoute,
  AuthRouteRoute.addChildren([
    AuthDashboardRouteLazyRoute,
    Auth403LazyRoute,
    Auth404LazyRoute,
    Auth500LazyRoute,
    AuthIndexLazyRoute,
  ]),
  WhitelistRouteRoute.addChildren([
    WhitelistLoginRouteRoute,
    WhitelistSignupRouteRoute,
    WhitelistForgotPasswordRouteLazyRoute,
    WhitelistSsoRouteLazyRoute,
  ]),
])

/* prettier-ignore-end */
